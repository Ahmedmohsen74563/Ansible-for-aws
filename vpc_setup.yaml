- name: Create a new VPC in AWS
  hosts: localhost
  connection: local
  gather_facts: no

  vars_files:
    - vars/vpc_setup

  tasks:
    - name: Create a new VPC
      ec2_vpc_net:
        state: "{{ state }}"
        cidr_block: "{{ vpcCidr }}"
        region: "{{ region }}"
        name: "{{ vpc_name }}"
        resource_tags:
          Name: "{{ vpc_name }}"
      register: vpcout

    - name: Create public subnets
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PubSub1Cidr }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        resource_tags:
          Name:  vp-pubsub1
      register: pub1_out

    - name: Create public subnets
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PubSub2Cidr }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        resource_tags:
          Name:  vp-pubsub2
      register: pub2_out

    - name: Create private subnets
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PrivSub1Cidr }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        resource_tags:
          Name:  vp-privsub1
      register: priv1_out

    - name: Create private subnets
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PrivSub2Cidr }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        resource_tags:
          Name:  vp-privsub2
      register: priv2_out

    - name: Create an Internet Gateway
      ec2_vpc_igw:
        state: present
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: my-igw
      register: igw_out
      
    - name: Create a route table for pubsubnet
      ec2_vpc_route_table:
        state: present
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: pub-route-table
        subnets:
          - "{{ pub1_out.subnet.id }}"
          - "{{ pub2_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_out.gateway_id }}"
      register: pub_rt_out

    - name: Create a NAT gateway
      ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{ pub1_out.subnet.id }}"
        region: "{{ region }}"
        if_exist_do_not_create: true 
      register: nat_gw_out

    - name: Create a route table for privsubnet
      ec2_vpc_route_table:
        state: present
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: priv-route-table
        subnets:
          - "{{ priv1_out.subnet.id }}"
          - "{{ priv2_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            nat_gateway_id: "{{ nat_gw_out.nat_gateway_id }}"
      register: priv_rt_out

    - name: Debug variables
      debug:
        var: "{{item}}"
      loop:
        - vpcout.id
        - pub1_out.subnet.id
        - pub2_out.subnet.id
        - priv1_out.subnet.id
        - priv2_out.subnet.id
        - nat_gw_out.nat_gateway_id
        - pub_rt_out.id
        - priv_rt_out.id
        - igw_out.gateway_id

    - name: Store IDs in File
      set_fact: 
        vpcout: "{{ vpcout.id }}"
        pub1_out: "{{ pub1_out.subnet.id }}"
        pub2_out: "{{ pub2_out.subnet.id }}"
        priv1_out: "{{ priv1_out.subnet.id }}"
        priv2_out: "{{ priv2_out.subnet.id }}"
        nat_gw_out:  "{{ nat_gw_out.nat_gateway_id }}"
        pub_rt_out: "{{ pub_rt_out.id }}"
        priv_rt_out: "{{ priv_rt_out.id }}"
        igw_out: "{{ igw_out.gateway_id }}"
